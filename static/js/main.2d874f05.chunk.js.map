{"version":3,"sources":["components/MainContent2.js","components/PersonalWebsite.js","App.js","serviceWorker.js","index.js"],"names":["library","add","fab","faCheckSquare","faEnvelope","MainContent","state","data","fetch","then","res","json","setState","className","href","target","rel","icon","style","maxWidth","this","map","el","width","name","description","html_url","Component","PersonalWebsite","FooterContent","Date","getFullYear","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d874f05.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nlibrary.add(\n  fab,\n  faCheckSquare,\n  faEnvelope\n)\n\nclass MainContent extends Component {\n\n  constructor() {\n    super();\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.github.com/users/eduandrade/repos`)\n      .then(res => res.json())\n      .then(json => this.setState({ data: json }));\n  }\n\n  render() {\n\n    return (\n      <main className=\"text-dark\">\n\n        <div className=\"d-flex p-1 justify-content-center bg-light\">\n          <div>\n            <div className=\"display-3 p-1 text-center\">Hello, world!</div>\n            <p>I'm Eduardo Andrade, a software developer for more than 15 years and this is my personal website, created using <span className=\"badge badge-info\">React</span>, <span className=\"badge badge-info\">Bootstrap 4</span> and <span className=\"badge badge-info\">GitHub API</span>.</p>\n            <p>Check some of my projects below :)</p>\n            <p>Feel free to add me on <a href=\"https://www.linkedin.com/in/eduandrade/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>!</p>\n            <p>Enjoy!</p>\n\n            <div className=\"text-center\">\n              <ul className=\"list-inline\">\n                <li className=\"list-inline-item\"><a href=\"https://github.com/eduandrade\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fab', 'github']} /></a></li>\n                <li className=\"list-inline-item\"><a href=\"https://www.linkedin.com/in/eduandrade/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fab', 'linkedin']} /></a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container-fluid p-3 bg-light\">\n\n          <div className=\"row mt-5 justify-content-center\">\n\n            <div className=\"card card-custom mx-2 mb-3\" style={{ maxWidth: \"18rem\" }}>\n              <div className=\"card-header\"><strong>Messenger Beer BOT</strong><br/><span className=\"badge badge-secondary m-1\">chatbot</span></div>\n              <div className=\"card-body\">\n                <p className=\"card-text\">Beer BOT provides information on beer for everyone â€” the craft beer rookies, for experts who search for inspiration, and for those who want to discover new tastes. To begin your interaction with Beer Bot, just click on Get Started.</p>\n              </div>\n              <div className=\"card-footer\">\n                <a className=\"btn btn-primary btn-sm\" href=\"https://m.me/messengerbeerbot/\" target=\"_blank\" rel=\"noopener noreferrer\">View chatbot &raquo;</a>\n              </div>\n            </div>\n\n            {this.state.data.map(el => (\n\n              <div className=\"card card-custom mx-2 mb-3\" style={{ width: \"18rem\" }}>\n                <div className=\"card-header\"><strong>{el.name}</strong><br/><span className=\"badge badge-secondary m-1\">repository</span></div>\n                <div className=\"card-body\">\n                  <p className=\"card-text\">{el.description}</p>\n                </div>\n                <div className=\"card-footer\">\n                  <a className=\"btn btn-primary btn-sm\" href={el.html_url} target=\"_blank\" rel=\"noopener noreferrer\">View repository &raquo;</a>    \n                </div>\n              </div>\n\n            ))}\n          </div>\n\n        </div>\n\n      </main>\n    );\n  }\n}\n\nexport default MainContent","import React, { Component } from 'react'\nimport MainContent from './MainContent2'\n\nclass PersonalWebsite extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <MainContent />\n        <FooterContent />\n      </div>\n    );\n  }\n}\n\nclass FooterContent extends Component {\n  render() {\n    return (\n      <footer className=\"footer bg-dark\">\n        <div className=\"container\">\n          <span className=\"text-muted\">&copy; Eduardo Andrade :) - {new Date().getFullYear()}</span>\n        </div>\n      </footer>\n    );\n  }\n}\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"/\">EDUARDO ANDRADE</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"projects\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Projects\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a className=\"dropdown-item\" href=\"https://m.me/messengerbeerbot/\">Beer BOT</a>\n                <a className=\"dropdown-item\" href=\"https://github.com/eduandrade/resume-react-webapp\">Resume React App</a>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\n\nexport default PersonalWebsite","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport PersonalWebsite from './components/PersonalWebsite'\n\nfunction App() {\n  return <PersonalWebsite />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}